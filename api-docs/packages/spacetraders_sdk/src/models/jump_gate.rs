/*
 * SpaceTraders API
 *
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 * Generated by: https://openapi-generator.tech
 */

/// JumpGate : 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JumpGate {
    /// The maximum jump range of the gate.
    #[serde(rename = "jumpRange")]
    pub jump_range: f32,
    /// The symbol of the faction that owns the gate.
    #[serde(rename = "factionSymbol", skip_serializing_if = "Option::is_none")]
    pub faction_symbol: Option<String>,
    /// The systems within range of the gate that have a corresponding gate.
    #[serde(rename = "connectedSystems")]
    pub connected_systems: Vec<crate::models::ConnectedSystem>,
}

impl JumpGate {
    /// 
    pub fn new(jump_range: f32, connected_systems: Vec<crate::models::ConnectedSystem>) -> JumpGate {
        JumpGate {
            jump_range,
            faction_symbol: None,
            connected_systems,
        }
    }
}


